{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhsuman/Downloads/Projects/ecosys_map/src/components/Threads/Threads.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './thread.css';\nimport { getPosition } from \"../../utils/functions\";\nimport Actor from '../Actor/Actor';\nimport { Arrow } from '../Arrow/Arrow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Threads(props) {\n  _s();\n\n  const [p1, setp1] = useState();\n  const [p2, setp2] = useState();\n  useEffect(() => {\n    var _props$step, _props$step2;\n\n    // getPosition(props.id);\n    const start = getPosition(props.id);\n    setp1(start);\n    const end = getPosition((props === null || props === void 0 ? void 0 : (_props$step = props.step) === null || _props$step === void 0 ? void 0 : _props$step.index) + \"_\" + (props === null || props === void 0 ? void 0 : (_props$step2 = props.step) === null || _props$step2 === void 0 ? void 0 : _props$step2.to));\n    setp2(end);\n  }, [props.id, props === null || props === void 0 ? void 0 : props.step]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-id\": props.id,\n    className: \"thread-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"vl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-nodeid\": props.id,\n      id: props.id,\n      className: props.active ? `thread-add-btn active` : `thread-add-btn`,\n      children: props.active ? \"\" : \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Threads, \"kYyZoS/R9KtEZ46t9WHiD+2CzY0=\");\n\n_c = Threads;\n\nvar _c;\n\n$RefreshReg$(_c, \"Threads\");","map":{"version":3,"sources":["/Users/saurabhsuman/Downloads/Projects/ecosys_map/src/components/Threads/Threads.js"],"names":["React","useEffect","useState","getPosition","Actor","Arrow","Threads","props","p1","setp1","p2","setp2","start","id","end","step","index","to","active"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEnC,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcP,QAAQ,EAA5B;AACA,QAAM,CAACQ,EAAD,EAAKC,KAAL,IAAcT,QAAQ,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACZ;AACA,UAAMW,KAAK,GAAGT,WAAW,CAACI,KAAK,CAACM,EAAP,CAAzB;AACAJ,IAAAA,KAAK,CAACG,KAAD,CAAL;AACA,UAAME,GAAG,GAAGX,WAAW,CAAC,CAAAI,KAAK,SAAL,IAAAA,KAAK,WAAL,2BAAAA,KAAK,CAAEQ,IAAP,4DAAaC,KAAb,IAAoB,GAApB,IAA0BT,KAA1B,aAA0BA,KAA1B,uCAA0BA,KAAK,CAAEQ,IAAjC,iDAA0B,aAAaE,EAAvC,CAAD,CAAvB;AACAN,IAAAA,KAAK,CAACG,GAAD,CAAL;AACH,GANQ,EAMN,CAACP,KAAK,CAACM,EAAP,EAAWN,KAAX,aAAWA,KAAX,uBAAWA,KAAK,CAAEQ,IAAlB,CANM,CAAT;AAQA,sBACI;AAAK,eAASR,KAAK,CAACM,EAApB;AAAwB,IAAA,SAAS,EAAC,kBAAlC;AAAA,4BACA;AAAK,MAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,YADA,eAGA;AAAQ,qBAAaN,KAAK,CAACM,EAA3B;AAA+B,MAAA,EAAE,EAAEN,KAAK,CAACM,EAAzC;AAA6C,MAAA,SAAS,EAAGN,KAAK,CAACW,MAAN,GAAe,uBAAf,GAAyC,gBAAlG;AAAA,gBAAqHX,KAAK,CAACW,MAAN,GAAc,EAAd,GAAmB;AAAxI;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAnBuBZ,O;;KAAAA,O","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport './thread.css';\nimport { getPosition } from \"../../utils/functions\";\nimport Actor from '../Actor/Actor';\nimport { Arrow } from '../Arrow/Arrow';\n\nexport default function Threads(props) {\n\n    const [p1, setp1] = useState()\n    const [p2, setp2] = useState()\n    useEffect(() => {\n        // getPosition(props.id);\n        const start = getPosition(props.id)\n        setp1(start)\n        const end = getPosition(props?.step?.index +\"_\" + props?.step?.to)\n        setp2(end)\n    }, [props.id, props?.step])\n\n    return (\n        <div data-id={props.id} className=\"thread-container\">\n        <div class=\"vl\">\n        </div>\n        <button data-nodeid={props.id} id={props.id} className={ props.active? `thread-add-btn active` : `thread-add-btn`}>{ props.active? \"\" : \"+\"}</button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}