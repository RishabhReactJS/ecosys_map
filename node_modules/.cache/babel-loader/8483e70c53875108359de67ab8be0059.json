{"ast":null,"code":"var _jsxFileName = \"/Users/saurabhsuman/Downloads/Projects/ecosys_map/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Canvas from \"./Canvas\";\nimport Actor from \"./components/Actor/Actor\";\nimport Steps from \"./components/Steps/Steps\";\nimport Threads from \"./components/Threads/Threads\";\nimport data from \"./utils/data.json\";\nimport React, { useState, useEffect } from 'react';\nimport { getPosition } from \"./utils/functions\";\nimport { Arrow } from \"./components/Arrow/Arrow\";\nimport React_Arrows from \"./components/Arrow/React_Arrows\";\nimport './components/Threads/thread.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [actors, setactors] = useState(data.actors);\n  const [steps, setsteps] = useState(data.steps);\n  const [rendered, setrendered] = useState(false);\n\n  const handleAddActor = event => {};\n\n  useEffect(() => {\n    setrendered(true);\n  }, [steps, actors]);\n\n  const Plus = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"thread-add-btn\",\n    children: \"+\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 22\n  }, this);\n\n  const CreatArrow = () => {\n    return steps === null || steps === void 0 ? void 0 : steps.map(step => /*#__PURE__*/_jsxDEV(Arrow, {\n      index: step.index,\n      start: step.index + \"_\" + step.from,\n      end: step.index + \"_\" + step.to,\n      deltaActor: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"actors\",\n      children: actors.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: actor.id,\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(Actor, {\n          text: actor.name,\n          children: steps === null || steps === void 0 ? void 0 : steps.map(step => /*#__PURE__*/_jsxDEV(Threads, {\n            step: step,\n            actor: actor.id,\n            id: `${step.index}_${actor.id}`,\n            active: actor.id === step.from || actor.id === step.to\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, actor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), rendered && /*#__PURE__*/_jsxDEV(CreatArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"O94jVm816IoRKW4nL2M2FPZF3pA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/saurabhsuman/Downloads/Projects/ecosys_map/src/App.js"],"names":["Canvas","Actor","Steps","Threads","data","React","useState","useEffect","getPosition","Arrow","React_Arrows","App","actors","setactors","steps","setsteps","rendered","setrendered","handleAddActor","event","Plus","CreatArrow","map","step","index","from","to","actor","id","name"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAO,iCAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACF,IAAI,CAACQ,MAAN,CAApC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACF,IAAI,CAACU,KAAN,CAAlC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMY,cAAc,GAAIC,KAAD,IAAW,CAGjC,CAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFQ,EAEN,CAACH,KAAD,EAAQF,MAAR,CAFM,CAAT;;AAIA,QAAMQ,IAAI,GAAG,mBAAM;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,WAAOP,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEQ,GAAP,CAAWC,IAAI,iBACnB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,IAAI,CAACC,KAAnB;AAA0B,MAAA,KAAK,EAAED,IAAI,CAACC,KAAL,GAAa,GAAb,GAAmBD,IAAI,CAACE,IAAzD;AAA+D,MAAA,GAAG,EAAEF,IAAI,CAACC,KAAL,GAAa,GAAb,GAAmBD,IAAI,CAACG,EAA5F;AAAgG,MAAA,UAAU,EAAE;AAA5G;AAAA;AAAA;AAAA;AAAA,YADI,CAAP;AAGD,GAJD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,gBACGd,MAAM,CAACU,GAAP,CAAYK,KAAD,iBACV;AAAI,QAAA,EAAE,EAAEA,KAAK,CAACC,EAAd;AAAiC,QAAA,SAAS,EAAC,EAA3C;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAED,KAAK,CAACE,IAAnB;AAAA,oBACCf,KADD,aACCA,KADD,uBACCA,KAAK,CAAEQ,GAAP,CAAWC,IAAI,iBAAI,QAAC,OAAD;AAAS,YAAA,IAAI,EAAEA,IAAf;AAAqB,YAAA,KAAK,EAAEI,KAAK,CAACC,EAAlC;AAAsC,YAAA,EAAE,EAAG,GAAEL,IAAI,CAACC,KAAM,IAAGG,KAAK,CAACC,EAAG,EAApE;AAAuE,YAAA,MAAM,EAAED,KAAK,CAACC,EAAN,KAAaL,IAAI,CAACE,IAAlB,IAA0BE,KAAK,CAACC,EAAN,KAAaL,IAAI,CAACG;AAA3H;AAAA;AAAA;AAAA;AAAA,kBAAnB;AADD;AAAA;AAAA;AAAA;AAAA;AADF,SAAuBC,KAAK,CAACC,EAA7B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,EAkBGZ,QAAQ,iBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAlBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA5CQL,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Canvas from \"./Canvas\";\nimport Actor from \"./components/Actor/Actor\";\nimport Steps from \"./components/Steps/Steps\";\nimport Threads from \"./components/Threads/Threads\";\nimport data from \"./utils/data.json\";\nimport React, { useState, useEffect } from 'react'\nimport { getPosition } from \"./utils/functions\";\nimport { Arrow } from \"./components/Arrow/Arrow\";\nimport React_Arrows from \"./components/Arrow/React_Arrows\";\nimport './components/Threads/thread.css';\n\nfunction App() {\n  const [actors, setactors] = useState(data.actors);\n  const [steps, setsteps] = useState(data.steps);\n  const [rendered, setrendered] = useState(false)\n  const handleAddActor = (event) => {\n\n\n  };\n\n  useEffect(() => {\n    setrendered(true)\n  }, [steps, actors])\n\n  const Plus = () => <button className=\"thread-add-btn\">+</button>\n\n  const CreatArrow = () => {\n    return steps?.map(step =>\n       <Arrow index={step.index} start={step.index + \"_\" + step.from} end={step.index + \"_\" + step.to} deltaActor={1} />\n    )\n  }\n\n\n  return (\n    <div className=\"App\">\n        <div className={\"header\"}></div>\n      <ul className=\"actors\">\n        {actors.map((actor) => (\n          <li id={actor.id} key={actor.id} className=\"\">\n            <Actor text={actor.name}>\n            {steps?.map(step => <Threads step={step} actor={actor.id} id={`${step.index}_${actor.id}`} active={actor.id === step.from || actor.id === step.to}/>)}\n            {/* <Threads id={`${steps.length + 1}_${actor.id}`}/> */}\n            </Actor>\n          </li>\n        ))}\n        {/* <li onClick={handleAddActor} id=\"new_actor\" key=\"new_actor\" className=\"new_actor\">\n          <Actor text=\"+ Add Actor\">\n          {steps?.map(step => <Threads id={`${step.index}_a_n`} />)}\n          <Threads id={`${steps.length + 1}_a_n`}/>\n          </Actor>\n        </li> */}\n      </ul>\n      {rendered && <CreatArrow />}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}